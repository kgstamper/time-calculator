{"version":3,"sources":["index.js"],"names":["App","useState","hr","min","sec","startTime","setStartTime","endTime","setEndTime","className","Controls","Display","onChange","e","target","id","parseInt","value","TimeInput","time","props","range","start","end","length","Array","from","_","i","hours","map","number","toString","minSec","replace","htmlFor","duration","minutes","seconds","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eaf7f828.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './custom.scss';\r\n\r\nfunction App() {\r\n    // set start / end time\r\n    const [ startTime, setStartTime ] = useState({\r\n        hr: 12,\r\n        min: 0,\r\n        sec: 0,\r\n    });\r\n\r\n    const [ endTime, setEndTime ] = useState({\r\n        hr: 13,\r\n        min: 0,\r\n        sec: 0,\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <header className=\"bg-secondary p-3\">\r\n                <h1 className=\"fw-lighter text-center text-white\">Time Calculator</h1>\r\n            </header>\r\n            <div className=\"col-lg-6 offset-lg-3 p-3\">\r\n                <Controls \r\n                    startTime={startTime} \r\n                    setStartTime={setStartTime} \r\n                    endTime={endTime}\r\n                    setEndTime={setEndTime}\r\n                />\r\n                <Display \r\n                    startTime={startTime} \r\n                    endTime={endTime} \r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Controls({ \r\n    startTime, \r\n    setStartTime, \r\n    endTime, \r\n    setEndTime\r\n}) {\r\n\r\n    // edit start / end time when changes are made\r\n    function onChange(e) {\r\n        switch (e.target.id) {\r\n            case 'start-time-hr':\r\n                setStartTime({\r\n                    ...startTime,\r\n                    hr: parseInt(e.target.value),\r\n                });\r\n                break;\r\n            case 'start-time-min':\r\n                setStartTime({\r\n                    ...startTime,\r\n                    min: parseInt(e.target.value),\r\n                });\r\n                break;\r\n            case 'start-time-sec':\r\n                setStartTime({\r\n                    ...startTime,\r\n                    sec: parseInt(e.target.value),\r\n                });\r\n                break;\r\n            case 'end-time-hr':\r\n                setEndTime({\r\n                    ...endTime,\r\n                    hr: parseInt(e.target.value),\r\n                });\r\n                break;\r\n            case 'end-time-min':\r\n                setEndTime({\r\n                    ...endTime,\r\n                    min: parseInt(e.target.value),\r\n                });\r\n                break;\r\n            case 'end-time-sec':\r\n                setEndTime({\r\n                    ...endTime,\r\n                    sec: parseInt(e.target.value),\r\n                });\r\n            break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"mb-4 pb-4 border-bottom border-gray\">\r\n            <TimeInput \r\n                id=\"start-time\" \r\n                time={startTime}\r\n                onChange={onChange}  \r\n            />\r\n            <TimeInput \r\n                id=\"end-time\" \r\n                time={endTime} \r\n                onChange={onChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nfunction TimeInput(props) {\r\n\r\n    // use to create range for select options\r\n    const range = (start, end, length = end - start + 1) => Array.from({ length }, (_, i) => start + i)\r\n\r\n    // generate hours list\r\n    const hours = range(0, 23).map((number) => {\r\n        if (number < 10) {\r\n            return <option value={number} key={number.toString()}>{`0${number}`}</option>\r\n        } else {\r\n            return <option value={number} key={number.toString()}>{number}</option>\r\n        }\r\n    });\r\n\r\n    // generate minutes / seconds list\r\n    const minSec = range(0, 59).map((number) => {\r\n        if (number < 10) {\r\n            return <option value={number} key={number.toString()}>{`0${number}`}</option>\r\n        } else {\r\n            return <option value={number} key={number.toString()}>{number}</option>\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div id={props.id}>\r\n            <p className=\"form-label text-capitalize\">{props.id.replace('-', ' ')}</p>\r\n            <div className=\"input-group mb-3\">\r\n                <label className=\"input-group-text bg-light\" htmlFor={props.id + '-hr'}>hr:</label>\r\n                <select className=\"form-select\" id={props.id + '-hr'} onChange={props.onChange} value={props.time.hr}>\r\n                    {hours}\r\n                </select>\r\n                <label className=\"input-group-text bg-light\" htmlFor={props.id + '-min'}>min:</label>\r\n                <select className=\"form-select\" id={props.id + '-min'} onChange={props.onChange} value={props.time.min}>\r\n                    {minSec}\r\n                </select>\r\n                <label className=\"input-group-text bg-light\" htmlFor={props.id + '-sec'}>sec:</label>\r\n                <select className=\"form-select\" id={props.id + '-sec'} onChange={props.onChange} value={props.time.sec}>\r\n                    {minSec}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Display({ startTime, endTime }) {\r\n\r\n    const duration = {};\r\n\r\n    if (endTime.hr < startTime.hr) {\r\n        duration.hours = endTime.hr - startTime.hr + 24;\r\n    } else {\r\n        duration.hours = endTime.hr - startTime.hr;\r\n    }\r\n\r\n    if (endTime.min < startTime.min) {\r\n        duration.minutes = endTime.min - startTime.min + 60;\r\n        duration.hours--;\r\n    } else {\r\n        duration.minutes = endTime.min - startTime.min;\r\n    }\r\n\r\n    if (endTime.sec < startTime.sec) {\r\n        duration.seconds = endTime.sec - startTime.sec + 60;\r\n        if (duration.minutes === 0) {\r\n            duration.hours--;\r\n            duration.minutes += 59;\r\n        } else duration.minutes--;\r\n    } else {\r\n        duration.seconds = endTime.sec - startTime.sec;\r\n    }\r\n\r\n    if (duration.hours < 0) {\r\n        duration.hours += 24;\r\n    }\r\n\r\n    return (\r\n        <div id=\"display\" className=\"text-center\">\r\n            <h3 className=\"fw-lighter\">Result:</h3>\r\n            <p className=\"fs-4 fw-lighter\">\r\n                {`${duration.hours} Hour(s),\r\n                ${duration.minutes} Minute(s), \r\n                ${duration.seconds} Second(s)`}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}